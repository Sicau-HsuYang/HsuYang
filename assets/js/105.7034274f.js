(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{413:function(a,t,_){"use strict";_.r(t);var s=_(14),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"位运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[a._v("#")]),a._v(" 位运算")]),a._v(" "),t("h3",{attrs:{id:"_1、基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本概念"}},[a._v("#")]),a._v(" 1、基本概念")]),a._v(" "),t("p",[a._v("ES 中所有的数值都以"),t("code",[a._v("IEEE-754")]),a._v(" 64 位格式存储，对于有符号数（整数），前 31 位用于表示数值，每个位置上即 2 的 X 次方，将这些加起来就是它表示的数值，第 32 位为符号位，0 表示正数，1 表示负数。")]),a._v(" "),t("p",[a._v("负数以二进制补码存储，通过以下三个步骤计算得出：")]),a._v(" "),t("ul",[t("li",[a._v("1、求出这个数值的绝对值的二进制码")]),a._v(" "),t("li",[a._v("2、将这个求得的二进制码按位取反，原来是 0 则为 1，原来是 1 则为 0")]),a._v(" "),t("li",[a._v("3、将二进制反码+1 即为求得的二进制补码")])]),a._v(" "),t("p",[a._v("浮点数的表示法略微有些")]),a._v(" "),t("h4",{attrs:{id:"_1-1、按位非"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、按位非"}},[a._v("#")]),a._v(" 1.1、按位非，"),t("code",[a._v("~")])]),a._v(" "),t("p",[t("strong",[a._v("二进制码取反")])]),a._v(" "),t("p",[a._v("根据之前负数的补码表示法则，可以得出一个结论按位非操作是"),t("strong",[a._v("原数值的相反数再减去 1")])]),a._v(" "),t("h4",{attrs:{id:"_1-2、按位与"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、按位与"}},[a._v("#")]),a._v(" 1.2、按位与，"),t("code",[a._v("&")])]),a._v(" "),t("h4",{attrs:{id:"_1-3、按位或"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、按位或"}},[a._v("#")]),a._v(" 1.3、按位或，"),t("code",[a._v("|")])]),a._v(" "),t("h4",{attrs:{id:"_1-4、按位异或"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4、按位异或"}},[a._v("#")]),a._v(" 1.4、按位异或，"),t("code",[a._v("^")])]),a._v(" "),t("h4",{attrs:{id:"_1-5、左移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5、左移"}},[a._v("#")]),a._v(" 1.5、左移，"),t("code",[a._v("<<")])]),a._v(" "),t("h4",{attrs:{id:"_1-6、右移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6、右移"}},[a._v("#")]),a._v(" 1.6、右移，"),t("code",[a._v(">>")])]),a._v(" "),t("h4",{attrs:{id:"_1-7、无符号右移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7、无符号右移"}},[a._v("#")]),a._v(" 1.7、无符号右移，"),t("code",[a._v(">>>")])]),a._v(" "),t("p",[a._v("按位与操作就是将两个操作数值的每一位对齐，若同一位，两个数都是 1，则结果为 1，否则为 0。")]),a._v(" "),t("h3",{attrs:{id:"_2、为什么-number-max-safe-integer-是-2-的-53-次方减-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、为什么-number-max-safe-integer-是-2-的-53-次方减-1"}},[a._v("#")]),a._v(" 2、为什么 Number.MAX_SAFE_INTEGER 是 2 的 53 次方减 1？")]),a._v(" "),t("p",[a._v("https://www.zhihu.com/question/29010688/answer/42886646")]),a._v(" "),t("h3",{attrs:{id:"_3、为什么-0-2-0-1-0-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、为什么-0-2-0-1-0-3"}},[a._v("#")]),a._v(" 3、为什么 0.2+0.1 !==0.3?")]),a._v(" "),t("p",[a._v("https://zhuanlan.zhihu.com/p/363254961")]),a._v(" "),t("h3",{attrs:{id:"_4、系统权限的另类设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、系统权限的另类设计"}},[a._v("#")]),a._v(" 4、系统权限的另类设计")]),a._v(" "),t("h3",{attrs:{id:"_5、其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、其它"}},[a._v("#")]),a._v(" 5、其它")]),a._v(" "),t("p",[a._v("算法中的应用")])])}),[],!1,null,null,null);t.default=r.exports}}]);